<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>py.com.skytel</groupId>
    <artifactId>platform</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>platform</name>

    <properties>
        <java.version>17</java.version>
        <maven.compiler.release>17</maven.compiler.release>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <maven-enforcer-plugin.version>3.1.0</maven-enforcer-plugin.version>
        <wildfly-jar-maven-plugin.version>8.0.1.Final</wildfly-jar-maven-plugin.version>
        <wildfly-jar-maven-plugin.server-bom-version>27.0.0.Final</wildfly-jar-maven-plugin.server-bom-version>

    </properties>

    <dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>10.0.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.5.1</version>
        </dependency>

    </dependencies>

    <build>
        <finalName>platform</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireJavaVersion>
                                    <version>${java.version}</version>
                                </requireJavaVersion>
                                <requireJavaVendor>
                                    <excludes>
                                        <exclude>Pivotal</exclude>
                                        <exclude>Oracle JDK</exclude>
                                    </excludes>
                                    <includes>
                                        <include>AdoptOpenJDK</include>
                                        <include>Eclipse Adoptium</include>
                                    </includes>
                                </requireJavaVendor>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${generated-sources.path}</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin-->

            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-jar-maven-plugin</artifactId>
                <version>${wildfly-jar-maven-plugin.version}</version>
                <configuration>
                    <feature-pack-location>
                        wildfly@maven(org.jboss.universe:community-universe)#${wildfly-jar-maven-plugin.server-bom-version}
                    </feature-pack-location>
                    <layers>
                        <layer>jaxrs</layer>
                    </layers>

                    <plugin-options>
                        <jboss-fork-embedded>true</jboss-fork-embedded>
                    </plugin-options>

                    <excluded-layers>
                        <layer>deployment-scanner</layer>
                    </excluded-layers>

                    <!-- By setting the hollow-jar option to true in the pom.xml 
                         you will be able to generate an Hollow Jar of the application server.
                         $>java -jar target/rest-demo-bootable.jar                    
                    <hollow-jar>true</hollow-jar>
                    -->

                    <!-- To allow the deployment of your Bootable Jar application in a Cloud environment, 
                         such as Kubernetes or OpenShift, you need to include the cloud element in your configuration: 
                    <cloud/>
                    -->

                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>package</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>